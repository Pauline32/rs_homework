如果你是某P2P租车的技术负责人，你会如何设计个性化推荐和搜索排序 阐述相似车型，搜索排序的设计方法 可能的embedding策略
搜索排序：
对于query（带有位置和旅行的时间），同时为host和guest优化搜索结果：
顾客角度：需要根据位置，价格，类型，评论等因素排序来获得客户喜欢的listing
车主角度：需要过滤掉那些有坏的评论等其他因素而拒绝guest的listing，将这些listing排列的低一点
采用Learnig to rank来做，将问题转换为pairwise regression问题，将预定的listing作为正样本，拒绝的作为负样本。

对短期行为可对待租车辆 Embedding：
数据集由 N 个用户的点击会话 (Session) 组成，其中每个会话定义为一个由用户点击的 M辆车 id 组成的的不间断序列
只要用户连续两次点击时间间隔超过30分钟，就认为是一个新的Session
目标是通过集合S，学习出每辆车的d维embedding表示，让相似车辆在embedding空间中距离更近
借鉴了word2vec中的skip-gram算法
车辆embedding，把每个用户连续点击过的车辆Session看做一个句子，每辆车当做word，训练出车辆的embedding

对长期行为可做User Type Embedding 和Listing Type Embedding：
构造数据集：由前面的点击序列变成预定序列，数据集为N个用户预定的Listing 组成的session集合

基于Embedding的搜索排序：
Step1，准备3种embedding值，Listing Embedding，User Type Embedding和Listing Type Embedding
Step2，获取基础指标H∗
Step3，提取地区embedding
用户在进行Query的时候，地区是重要的特征，先通过H*获取用户的近期行为，因为listing embedding里面包含了地区之间的差异信息，
计算每个地区所有listing embedding的均值作为这个地区的embedding，代表用户对该地区的偏好。
Step4，计算Embedding Features
比如EmbClickSim，针对每一个候选的listing，计算候选listing的listing embedding与地区embedding之间的余弦相似度相似度，取最高值作为该listing的EmbClickSim取值
UserTypeListingTypeSim，计算每一个候选listing所在的listing type embedding和用户的user type embedding之间的相似度
Step5，在原有的Ranking Model中加入embedding features进行计算

